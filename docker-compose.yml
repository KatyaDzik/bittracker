version: '3.2'

services:
  nginx:
    image: nginx:1.17-alpine
    container_name: '${PROJECT_NAME}_nginx'
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${FORWARD_APP_PORT:-80}:80'
    volumes:
      - ./app:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
      - ./data/nginx:/var/log/nginx
    networks:
      - bittracker
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        UID: '${UID}'
        GID: '${GID}'
    container_name: '${PROJECT_NAME}_app'
    restart: always
    env_file:
      - .env
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    volumes:
      - "./app:/var/www/html"
    depends_on:
      - db
      - nginx
    networks:
      - bittracker
  db:
    image: postgres:14.7-alpine
    container_name: '${PROJECT_NAME}_db'
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./data/dump:/dump
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - '${FORWARD_DB_PORT}:${FORWARD_DB_PORT}'
    networks:
      - bittracker
  test-db:
    image: postgres:14.7-alpine
    container_name: '${PROJECT_NAME}_test-db'
    volumes:
      - ./data/dump/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - '${FORWARD_TEST_DB_PORT}:${FORWARD_TEST_DB_PORT}'
    networks:
      - bittracker
  redis-db:
    image: redis:7.4.0-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-db:/root/redis
    environment:
      - REDIS_PASSWORD=redis
      - REDIS_PORT=6379
    networks:
      - bittracker
  rabbitmq:
    image: rabbitmq:4.0.2-management
    working_dir: /app
    hostname: rabbit-mq
    ports:
      - 15673:15672
      - 5673:5672
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBIT_USER}'
      RABBITMQ_DEFAULT_PASS: '${RABBIT_PASSWORD}'
    volumes:
      - "./data/rabbit:/var/lib/rabbitmq/mnesia/"
    networks:
      - bittracker
networks:
  bittracker:
    driver: bridge